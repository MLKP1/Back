generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./db.db"
}

model Address {
  id           String @id @default(cuid())
  number       Int
  street       String
  neighborhood String
  complement   String
  city         String
  state        String @default("SP")
  country      String @default("BR")
  zipCode      String @map("zip_code")
  latitude     Float
  longitude    Float

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  @@map("addresses")
}

enum UserRole {
  CUSTOMER
  EMPLOYEE
  ADMIN
}

model User {
  id       String   @id @default(cuid())
  name     String
  email    String   @unique
  password String
  role     UserRole @default(CUSTOMER)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Address Address?
  Order   Order[]
  Cart    Cart?

  @@map("users")
}

enum OrderStatus {
  PENDING
  CANCELLED
  PROCESSING
  DELIVERING
  DELIVERED
}

model Order {
  id     String      @id @default(cuid())
  status OrderStatus @default(PENDING)
  total  Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  pizzas   Pizza[]
  drinks   Drink[]
  desserts Dessert[]

  @@map("orders")
}

enum PizzaSizes {
  MEDIUM
  LARGE
  FAMILY
}

enum PizzaType {
  SWEET
  SALTY
}

model Pizza {
  id          String     @id @default(cuid())
  active      Boolean    @default(true)
  name        String
  description String?
  price       Int
  image       String?
  size        PizzaSizes
  type        PizzaType
  slug        String?    @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Order Order[]
  Cart  Cart[]

  @@map("pizzas")
}

enum DrinkType {
  SODA
  JUICE
  ALCOHOLIC
}

model Drink {
  id          String    @id @default(cuid())
  active      Boolean   @default(true)
  name        String
  description String?
  price       Int
  image       String?
  volume      Int
  type        DrinkType
  slug        String?   @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Order Order[]
  Cart  Cart[]

  @@map("drinks")
}

enum DessertType {
  SWEET
  SALTY
}

model Dessert {
  id          String      @id @default(cuid())
  active      Boolean     @default(true)
  name        String
  description String?
  price       Int
  image       String?
  size        String
  type        DessertType
  slug        String?     @unique

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  Order Order[]
  Cart  Cart[]

  @@map("desserts")
}

model Cart {
  id     String      @id @default(cuid())
  status OrderStatus @default(PENDING)
  total  Int

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  pizzas   Pizza[]
  drinks   Drink[]
  desserts Dessert[]

  @@map("carts")
}
